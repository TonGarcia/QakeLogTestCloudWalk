# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Ruby.gitlab-ci.yml

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/ruby/tags/
image: iltongarcia/ruby:2.7.2

# Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ee/ci/docker/using_docker_images.html#what-is-a-service
services:
  - redis:latest
  - postgres:14

# Env Variables Setup
variables:
  POSTGRES_DB: qake_log
  POSTGRES_USER: pguser
  POSTGRES_PASSWORD: pguser
  POSTGRES_HOST: postgres
  POSTGRES_HOST_AUTH_METHOD: trust
  #RAILS_ENV: gitlab
  RAILS_ENV: test
  DATABASE_URL: "postgresql://pguser:pguser@postgres:5432/qake_log"
  DATABASE_CLEANER_ALLOW_REMOTE_DATABASE_URL: 1

# Cache gems in between builds
cache:
  paths:
    - vendor/ruby
    - node_modules/
    - .yarn

# Environments/Processes
stages:
  - quality
  - build
  - test
  - report
  - deploy

# This is a basic example for a gem or script which doesn't use
# services such as redis or postgres
before_script:
  - bundle config set --local path 'vendor'
  - gem install bundler --no-document
  - bundle install

rubocop:
  stage: quality
  script:
    - bin/bundle exec rubocop
  only:
    - tags

assets_precompile:
  stage: build
  script:
    - curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash && source ~/.profile
    - nvm install 12.18.3
    - yarn install
    - bundle exec rake webpacker:install
    - bundle exec rake assets:precompile
  only:
    - tags

rails:
  stage: build
  script:
    - curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash && source ~/.profile
    - nvm install 12.18.3
    - yarn install
    - bundle exec rake db:create
    - bundle exec rake db:prod
  only:
    - tags

rspec:
  stage: test
  script:
    - curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash && source ~/.profile
    - nvm install 12.18.3
    - yarn install
    - bundle exec rake db:create
    - RAILS_ENV=test rails db:create
    - RAILS_ENV=test rails db:recreate
    - RAILS_ENV=test DISABLE_DATABASE_ENVIRONMENT_CHECK=1 bundle exec rspec spec
#  only:
#    - tags

#heroku:
#  stage: deploy
#  before_script: []
#  script:
#    - gem install dpl
#    - dpl --provider=heroku --app=$HEROKU_APP_PRODUCTION --api-key=$HEROKU_API_KEY
#  only:
#    - tags
